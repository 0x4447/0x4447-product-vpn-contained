{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "This stack deploys a containerized VPN server for one user.",
	"Parameters": {
		"Email": {
			"Description": "Provide an email to which to send errors from alarms",
			"Type": "String"
		},
		"06xIPSec": {
			"Description": "A random IPSec PSK string.",
			"Type": "String",
			"NoEcho": true,
			"MinLength": 10
		},
		"09xEIP": {
			"Description": "Type the elastic IP ID that you'd like to associate to the EC2 instance.",
			"Type": "String"
		},
		"PasswordAdditional": {
			"Description": "passwords must be separated by spaces.",
			"Type": "String",
			"NoEcho": true
		},
		"05xPassword": {
			"Description": "The password for your VPN.",
			"Type": "String",
			"NoEcho": true,
			"MinLength": 10
		},
		"08xSecondaryDNS": {
			"Description": "The secondary DNS.",
			"Type": "String",
			"Default": "1.0.0.1"
		},
		"07xPrimaryDNS": {
			"Description": "The primary DNS.",
			"Type": "String",
			"Default": "1.1.1.1"
		},
		"UsernameAdditional": {
			"Description": "Usernames must be separated by spaces, and cannot contain duplicates. All VPN users will share the same IPsec PSK.",
			"Type": "String"
		},
		"04xUsername": {
			"Description": "The user name for your VPN.",
			"Type": "String",
			"MinLength": 3
		},
		"02xSubnet": {
			"Description": "Select the subnet to which to deploy the VPN.",
			"ConstraintDescription": "must be the name of an existing subnet",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"01xVPC": {
			"Description": "Select the VPC to which to deploy the VPN.",
			"ConstraintDescription": "must be the name of an existing subnet",
			"Type": "AWS::EC2::VPC::Id"
		}
	},
	"Mappings": {
		"OSIDs": {
			"us-east-2": {
				"64": "ami-0aa9ee1fc70e57450"
			},
			"us-east-1": {
				"64": "ami-007571470797b8ffa"
			},
			"us-west-2": {
				"64": "ami-0302f3ec240b9d23c"
			},
			"us-west-1": {
				"64": "ami-0935a5e8655c6d896"
			},
			"eu-west-3": {
				"64": "ami-0b419de35e061d9df"
			},
			"eu-west-2": {
				"64": "ami-0380c676fcff67fd5"
			},
			"eu-west-1": {
				"64": "ami-0b8e62ddc09226d0a"
			},
			"eu-central-1": {
				"64": "ami-01b63d839941375df"
			},
			"eu-north-1": {
				"64": "ami-03f8f3eb89dcfe553"
			},
			"ap-northeast-2": {
				"64": "ami-0c57dafd95a102862"
			},
			"ap-northeast-1": {
				"64": "ami-086ca990ae37efc1b"
			},
			"ap-southeast-2": {
				"64": "ami-0d28e5e0f13248294"
			},
			"ap-southeast-1": {
				"64": "ami-0627e2913cf6756ed"
			},
			"ca-central-1": {
				"64": "ami-0835b198c8a7aced4"
			},
			"ap-south-1": {
				"64": "ami-05de310b944d67cde"
			},
			"sa-east-1": {
				"64": "ami-09987452123fadc5b"
			},
			"us-gov-east-1": {
				"64": "ami-07dfc9cdc48d8649a"
			},
			"us-gov-west-1": {
				"64": "ami-914229f0"
			}
		}
	},
	"Resources": {
		"EC2AutoScalingGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"DesiredCapacity": 1,
				"LaunchConfigurationName": {
					"Ref": "EC2LaunchConfiguration"
				},
				"MaxSize": 1,
				"MinSize": 1,
				"VPCZoneIdentifier": [
					{
						"Ref": "02xSubnet"
					}
				]
			},
			"UpdatePolicy": {
				"AutoScalingRollingUpdate": {
					"MaxBatchSize": 1,
					"MinInstancesInService": 0,
					"PauseTime": "PT15M",
					"SuspendProcesses": [
						"HealthCheck",
						"ReplaceUnhealthy",
						"AZRebalance",
						"AlarmNotification",
						"ScheduledActions"
					],
					"WaitOnResourceSignals": true
				}
			}
		},
		"ECSInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [
					{
						"Ref": "EC2Role"
					}
				],
				"InstanceProfileName": {
					"Fn::Sub": "${AWS::StackName}-IP"
				}
			}
		},
		"EC2LaunchConfiguration": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"IamInstanceProfile": {
					"Ref": "ECSInstanceProfile"
				},
				"ImageId": {
					"Fn::FindInMap": [
						"OSIDs",
						{
							"Ref": "AWS::Region"
						},
						"64"
					]
				},
				"AssociatePublicIpAddress": true,
				"InstanceType": "t3.nano",
				"SecurityGroups": [
					{
						"Ref": "VPNSecurityGroup"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash",
								{
									"Fn::Sub": "EIP_ID=${09xEIP}"
								},
								{
									"Fn::Sub": "AWS_REGION=${AWS::Region}"
								},
								{
									"Fn::Sub": "echo ECS_CLUSTER=${ECSVPNCluster} >> /etc/ecs/ecs.config"
								},
								"INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null)",
								"sudo yum -y update",
								"sudo yum -y install awslogs",
								"sudo yum install -y aws-cfn-bootstrap",
								"sudo yum install -y unzip",
								"curl -O https://bootstrap.pypa.io/get-pip.py",
								"sudo python get-pip.py",
								"sudo pip install awscli --upgrade",
								"curl -O https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip",
								"unzip AmazonCloudWatchAgent.zip",
								"sudo ./install.sh",
								"echo ewoJIm1ldHJpY3MiOiB7CgkJIm1ldHJpY3NfY29sbGVjdGVkIjogewoJCQkiY3B1IjogewoJCQkJInJlc291cmNlcyI6IFsiKiJdLAoJCQkJIm1lYXN1cmVtZW50IjogWyJ1c2FnZV9zeXN0ZW0iLCAidXNhZ2VfdXNlciJdLAoJCQkJInRvdGFsY3B1IjogZmFsc2UKCQkJfSwKCQkJImRpc2siOiB7CgkJCQkicmVzb3VyY2VzIjogWyIqIl0sCgkJCQkibWVhc3VyZW1lbnQiOiBbImZyZWUiLCAidG90YWwiLCAidXNlZCJdCgkJCX0sCgkJCSJwcm9jZXNzZXMiOiB7CgkJCQkibWVhc3VyZW1lbnQiOiBbInJ1bm5pbmciLCAic2xlZXBpbmciLCAiZGVhZCJdCgkJCX0sCgkJCSJtZW0iOiB7CgkJCQkibWVhc3VyZW1lbnQiOiBbImF2YWlsYWJsZSIsICJ0b3RhbCIsICJ1c2VkIl0KCQkJfQoJCX0sCgkJImFwcGVuZF9kaW1lbnNpb25zIjogewoJCQkiSW1hZ2VJZCI6ICIke2F3czpJbWFnZUlkfSIsCgkJCSJJbnN0YW5jZUlkIjogIiR7YXdzOkluc3RhbmNlSWR9IiwKCQkJIkluc3RhbmNlVHlwZSI6ICIke2F3czpJbnN0YW5jZVR5cGV9IiwKCQkJIkF1dG9TY2FsaW5nR3JvdXBOYW1lIjogIiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIKCQl9LAoJCSJhZ2dyZWdhdGlvbl9kaW1lbnNpb25zIiA6IFtbIkF1dG9TY2FsaW5nR3JvdXBOYW1lIl0sIFsiSW5zdGFuY2VJZCIsICJJbnN0YW5jZVR5cGUiXV0KCX0KfQ== | base64 --decode | sudo tee /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json",
								"sudo amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s",
								"aws ec2 associate-address --allocation-id $EIP_ID --instance-id $INSTANCE_ID --allow-reassociation --region=$AWS_REGION",
								{
									"Fn::Sub": "sudo /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2LaunchConfiguration"
								},
								{
									"Fn::Sub": "sudo /opt/aws/bin/cfn-signal -s true --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2AutoScalingGroup"
								}
							]
						]
					}
				}
			},
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"files": {
							"/etc/cfn/cfn-hup.conf": {
								"mode": "000644",
								"owner": "root",
								"group": "root",
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[main]",
											{
												"Fn::Sub": "stack=${AWS::StackId}"
											},
											{
												"Fn::Sub": "region=${AWS::Region}"
											}
										]
									]
								}
							},
							"/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[cfn-auto-reloader-hook]",
											"triggers=post.update",
											"path=Resources.ECSLaunchConfiguration.Metadata.AWS::CloudFormation::Init",
											{
												"Fn::Sub": "action=/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration"
											}
										]
									]
								}
							}
						},
						"services": {
							"sysvinit": {
								"cfn-hup": {
									"enabled": true,
									"ensureRunning": true,
									"files": [
										"/etc/cfn/cfn-hup.conf",
										"/etc/cfn/hooks.d/cfn-auto-reloader.conf"
									]
								}
							}
						}
					}
				}
			}
		},
		"VPNSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupName": {
					"Ref": "AWS::StackName"
				},
				"GroupDescription": "This group allow our ECS VPN to accept incoming connections.",
				"VpcId": {
					"Ref": "01xVPC"
				},
				"SecurityGroupEgress": [
					{
						"IpProtocol": "-1",
						"FromPort": -1,
						"ToPort": -1,
						"CidrIp": "0.0.0.0/0"
					}
				],
				"SecurityGroupIngress": [
					{
						"IpProtocol": "udp",
						"FromPort": 4500,
						"ToPort": 4500,
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": 500,
						"ToPort": 500,
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},
		"EC2ElasticIPPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "Elastic_IP",
				"Roles": [
					{
						"Ref": "EC2Role"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": "ec2:AssociateAddress",
							"Resource": "*"
						}
					]
				}
			}
		},
		"EC2Role": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": "${AWS::StackName}-EC2"
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "ec2.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
					"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
					"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
				]
			}
		},
		"ECSVPNCluster": {
			"Type": "AWS::ECS::Cluster",
			"Properties": {
				"ClusterName": {
					"Ref": "AWS::StackName"
				}
			}
		},
		"ECSVPNService": {
			"Type": "AWS::ECS::Service",
			"Properties": {
				"Cluster": {
					"Ref": "ECSVPNCluster"
				},
				"LaunchType": "EC2",
				"SchedulingStrategy": "DAEMON",
				"TaskDefinition": {
					"Ref": "ECSVPNTask"
				}
			}
		},
		"ECSVPNTask": {
			"Type": "AWS::ECS::TaskDefinition",
			"Properties": {
				"Family": {
					"Ref": "AWS::StackName"
				},
				"Volumes": [
					{
						"Name": "modules",
						"Host": {
							"SourcePath": "/lib/modules"
						}
					}
				],
				"ExecutionRoleArn": {
					"Ref": "ECSVPNTaskExecutionRole"
				},
				"TaskRoleArn": {
					"Ref": "ECSVPNTaskTaskRole"
				},
				"Memory": "256",
				"RequiresCompatibilities": [
					"EC2"
				],
				"NetworkMode": "bridge",
				"ContainerDefinitions": [
					{
						"Environment": [
							{
								"Name": "VPN_USER",
								"Value": {
									"Ref": "04xUsername"
								}
							},
							{
								"Name": "VPN_PASSWORD",
								"Value": {
									"Ref": "05xPassword"
								}
							},
							{
								"Name": "VPN_IPSEC_PSK",
								"Value": {
									"Ref": "06xIPSec"
								}
							},
							{
								"Name": "VPN_DNS_SRV1",
								"Value": {
									"Ref": "07xPrimaryDNS"
								}
							},
							{
								"Name": "VPN_DNS_SRV2",
								"Value": {
									"Ref": "08xSecondaryDNS"
								}
							},
							{
								"Name": "VPN_ADDL_USERS",
								"Value": {
									"Ref": "UsernameAdditional"
								}
							},
							{
								"Name": "VPN_ADDL_PASSWORDS",
								"Value": {
									"Ref": "PasswordAdditional"
								}
							}
						],
						"Image": "hwdsl2/ipsec-vpn-server",
						"Memory": 128,
						"MountPoints": [
							{
								"ReadOnly": true,
								"ContainerPath": "/lib/modules",
								"SourceVolume": "modules"
							}
						],
						"Name": "VPN",
						"PortMappings": [
							{
								"HostPort": 4500,
								"Protocol": "udp",
								"ContainerPort": 4500
							},
							{
								"HostPort": 500,
								"Protocol": "udp",
								"ContainerPort": 500
							}
						],
						"Privileged": true,
						"ReadonlyRootFilesystem": false
					}
				]
			}
		},
		"ECSVPNTaskExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": "${AWS::StackName}-ECS-Execution"
				},
				"AssumeRolePolicyDocument": {
					"Version": "2008-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "ecs-tasks.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/CloudWatchFullAccess",
					"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
				]
			}
		},
		"ECSVPNTaskTaskRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": "${AWS::StackName}-ECS-Task"
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "ecs-tasks.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/CloudWatchFullAccess",
					"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
				]
			}
		},
		"Subscription": {
			"Type": "AWS::SNS::Subscription",
			"Properties": {
				"Endpoint": {
					"Ref": "Email"
				},
				"Protocol": "email",
				"TopicArn": {
					"Ref": "SNSTopic"
				}
			}
		},
		"SNSTopic": {
			"Type": "AWS::SNS::Topic",
			"Properties": {
				"DisplayName": {
					"Fn::Sub": "${AWS::StackName}-Alert"
				}
			}
		},
		"CloudWatchDashboard": {
			"Type": "AWS::CloudWatch::Dashboard",
			"Properties": {
				"DashboardName": {
					"Ref": "AWS::StackName"
				},
				"DashboardBody": {
					"Fn::Sub": [
						"{\r\n    \"widgets\": [\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 9,\r\n            \"y\": 0,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"NetworkIn\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"stat\": \"Sum\", \"color\": \"#1f77b4\", \"label\": \"RX\" } ],\r\n                    [ \".\", \"NetworkOut\", \".\", \".\", { \"yAxis\": \"left\", \"stat\": \"Sum\", \"color\": \"#ff7f0e\", \"label\": \"TX\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": true,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Network In & Out\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 9,\r\n            \"y\": 3,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/ECS\", \"CPUUtilization\", \"ClusterName\", \"${ClusterName}\", { \"yAxis\": \"left\", \"label\": \"ECS\" } ],\r\n                    [ \"AWS/EC2\", \".\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"label\": \"EC2\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": true,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"EC2 CPU Time\",\r\n                \"period\": 300,\r\n                \"legend\": {\r\n                    \"position\": \"bottom\"\r\n                },\r\n                \"yAxis\": {\r\n                    \"left\": {\r\n                        \"label\": \"\",\r\n                        \"showUnits\": true\r\n                    },\r\n                    \"right\": {\r\n                        \"label\": \"\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 0,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"NetworkOut\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"yAxis\": \"right\", \"id\": \"m2\", \"stat\": \"Sum\", \"period\": 2592000, \"color\": \"#ff7f0e\", \"label\": \"TX\" } ],\r\n                    [ \".\", \"NetworkIn\", \".\", \".\", { \"id\": \"m1\", \"stat\": \"Sum\", \"period\": 2592000, \"color\": \"#1f77b4\", \"label\": \"RX\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Total traffic\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 15,\r\n            \"y\": 9,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"mem_used\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#ff7f0e\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"mem_available\", \".\", \".\", { \"color\": \"#2ca02c\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"RAM\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 9,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"mem_total\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#d62728\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Total\" } ],\r\n                    [ \".\", \"mem_used\", \".\", \".\", { \"color\": \"#ff7f0e\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"mem_available\", \".\", \".\", { \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"RAM\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 15,\r\n            \"y\": 15,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"processes_running\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#2ca02c\", \"label\": \"Running\" } ],\r\n                    [ \".\", \"processes_sleeping\", \".\", \".\", { \"label\": \"Sleeping\" } ],\r\n                    [ \".\", \"processes_dead\", \".\", \".\", { \"color\": \"#d62728\", \"label\": \"Dead\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Processes\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 15,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"processes_dead\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#d62728\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Dead\" } ],\r\n                    [ \".\", \"processes_sleeping\", \".\", \".\", { \"period\": 2592000, \"stat\": \"Maximum\", \"color\": \"#ff7f0e\", \"label\": \"Sleeping\" } ],\r\n                    [ \".\", \"processes_running\", \".\", \".\", { \"color\": \"#2ca02c\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Running\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Processes\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 15,\r\n            \"y\": 12,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"disk_used\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#ff7f0e\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"disk_free\", \".\", \".\", { \"color\": \"#2ca02c\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"HDD\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 12,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"disk_total\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#d62728\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Total\" } ],\r\n                    [ \".\", \"disk_used\", \".\", \".\", { \"color\": \"#ff7f0e\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"disk_free\", \".\", \".\", { \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"HDD\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 6,\r\n            \"width\": 24,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"CPUSurplusCreditsCharged\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\" ],\r\n                    [ \".\", \"CPUSurplusCreditBalance\", \".\", \".\" ],\r\n                    [ \".\", \"CPUCreditUsage\", \".\", \".\" ]\r\n                ],\r\n                \"region\": \"${region}\",\r\n                \"title\": \"EC2 CPU Burst\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 3,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"CPUUtilization\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#ff7f0e\", \"label\": \"EC2\" } ],\r\n                    [ \"AWS/ECS\", \".\", \"ClusterName\", \"${ClusterName}\", { \"yAxis\": \"left\", \"color\": \"#1f77b4\", \"label\": \"ECS\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"${region}\",\r\n                \"title\": \"Average CPU time\",\r\n                \"period\": 300,\r\n                \"legend\": {\r\n                    \"position\": \"bottom\"\r\n                },\r\n                \"yAxis\": {\r\n                    \"left\": {\r\n                        \"label\": \"\",\r\n                        \"showUnits\": true\r\n                    },\r\n                    \"right\": {\r\n                        \"label\": \"\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
						{
							"AutoScalingGroupName": {
								"Ref": "EC2AutoScalingGroup"
							},
							"ClusterName": {
								"Ref": "AWS::StackName"
							},
							"region": {
								"Ref": "AWS::Region"
							}
						}
					]
				}
			}
		},
		"RAMAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "${AWS::StackName}-RAM"
				},
				"AlarmDescription": "Track RAM utilization across all the EC2",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 400000000,
				"Namespace": "CWAgent",
				"MetricName": "mem_used",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "AutoScalingGroupName",
						"Value": {
							"Ref": "EC2AutoScalingGroup"
						}
					}
				]
			}
		},
		"CPUBurstAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "${AWS::StackName}-CPU-Burst"
				},
				"AlarmDescription": "Track CPU Burst utilization.",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 100,
				"Namespace": "AWS/EC2",
				"MetricName": "CPUSurplusCreditBalance",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "AutoScalingGroupName",
						"Value": {
							"Ref": "EC2AutoScalingGroup"
						}
					}
				]
			}
		},
		"CPUAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "${AWS::StackName}-CPU"
				},
				"AlarmDescription": "Track CPU utilization.",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 75,
				"Namespace": "AWS/EC2",
				"MetricName": "CPUUtilization",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "AutoScalingGroupName",
						"Value": {
							"Ref": "EC2AutoScalingGroup"
						}
					}
				]
			}
		}
	},
	"Outputs": {
		"OutputUsername": {
			"Value": {
				"Ref": "04xUsername"
			},
			"Description": "Your VPN Username."
		},
		"OutputPassword": {
			"Value": {
				"Ref": "05xPassword"
			},
			"Description": "Your VPN Password."
		},
		"OutputIPSec": {
			"Value": {
				"Ref": "06xIPSec"
			},
			"Description": "Your IPSec Value."
		}
	}
}